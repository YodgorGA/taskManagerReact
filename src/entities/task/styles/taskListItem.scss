@import '/src/app/styles/mixins';
@import '/src/app/styles/letterals';

.taskListItem{
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: center;
    position: relative;
    height: 64px;
    padding: 20px 30px;
    box-sizing: border-box;
    &:nth-child(odd) {
        background-color: $whiteRowColor;
    }
    &:nth-child(even) {
        background-color: $grayRowColor;
    }
    &:first-child{
        border-radius: 5px 5px 0px 0px;
    }
    &:last-child{
        border-radius: 0px 0px 5px 5px;
    }
    &_type{
        &__task{
            @include taskItemType('../../../public/img/taskList/taskIcon.png');
        }
        &__bug{
            @include taskItemType('../../../public/img/taskList/bugIcon.png');
        }
    }
    &_taskName{
        margin-left: 60px;
        width: 527px;
        max-height: 54px;
        overflow: hidden;
        & p{
            @include font('Roboto',16px,400,171%);
        }
    }
    &_assignedUser{
        width: 180px;
        margin-left: 20px;
        & p{
            width: 100%;
            height: 27px;
            @include font('Roboto',16px,400,171%);
            overflow: hidden;
            word-break: break-all;
            text-overflow: ellipsis;
        }
    }
    &_status{
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center;
        width: 120px;
        margin-left: 13px;
        height: 40px;
        .taskStatus{
            &__opened{
                @include taskItemStatus('../.././../public/img/taskList/taskOpen.svg')
            }
            &__inProgress{
                @include taskItemStatus('../.././../public/img/taskList/taskProcess.svg')
            }
            &__testing{
                @include taskItemStatus('../.././../public/img/taskList/taskTest.svg')
            }
            &__complete{
                @include taskItemStatus('../.././../public/img/taskList/taskDone.svg')
            }
        }
    }
    &_priority{
        &__high{
            @include taskPriority('../.././../public/img/taskList/priorHigh.svg');
        }
        &__medium{
            @include taskPriority('../.././../public/img/taskList/priorMedium.svg');
        }
        &__low{
            @include taskPriority('../.././../public/img/taskList/priorLow.svg');
        }
    }
    &_menuButton{
        width: 80px;
        height: 20px;
        margin-left: 50px;
        position: relative;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: flex-end;
    }

    &:last-child {
        & .taskDropdown_droppedField__open
        {
            top:-80px;
        }
    }
    &:nth-child(odd){
        & .taskDropdown_droppedField__open
        {
            top:20px;
        }
    }
    
}

.taskDropdown{
    
    &_button{
        &__stayed{
            @include taskButton('../../../public/img/taskList/taskDropdown.svg');
        }
        &__active{
            @include taskButton('../../../public/img/taskList/taskDropdownActive.svg');
        }
    }
    &_droppedField{
        &__closed{
            display: none;
        }
        &__open{
            position: absolute;
            z-index: 9;
            right: 0px;
            top:20px;
            width: 115px;
            height: 80px;
            display: flex;
            flex-direction: column;
            box-sizing: border-box;
            padding: 2px 0px;
            background-color: $white;
            border-radius: 5px;
            box-shadow:  0px 0px 1px 2px $activeInputTextareaShadowColor;
        }
    }
}

.droppedFieldTaskDropdown{
    &>*{
        @include font('Inter',12px,400,117%);
        height: 20px;
        width: 100%;
        cursor: pointer;
        box-sizing: border-box;
        padding: 0px 5px;
        &:hover{
            color:$primaryColor;
        }
    }
    &_edit{

    }
    &_delete{
        color:$dangerStatusbarColor;
        &:hover{
            color:$dangerStatusbarTextBorderColor;
        }
    }
    &_sendToTest{
        &__disabled{
            color:$disabledElementTextColor;
            &:hover{
                cursor: default;
                color:$disabledElementTextColor;
            }
        }
    }
    &_reopen{
        &__disabled{
            color:$disabledElementTextColor;
            &:hover{
                cursor: default;
                color:$disabledElementTextColor;
            }
        }
    }

    & a{
        text-decoration: none;
        color:$darkTextColor;
        & :hover{
            color:$primaryColor;
        }
    }
}

